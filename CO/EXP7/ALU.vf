////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ALU.vf
// /___/   /\     Timestamp : 05/09/2017 15:29:39
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/Users/Shana/Desktop/EXP7/ipcore_dir -intstyle ise -family kintex7 -verilog D:/Users/Shana/Desktop/EXP7/ALU.vf -w D:/Users/Shana/Desktop/EXP7/ALU.sch
//Design Name: ALU
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_MUSER_ALU(I0, 
                        I1, 
                        I2, 
                        I3, 
                        s, 
                        o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_23;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_17));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_23));
   AND2  XLXI_3 (.I0(XLXN_23), 
                .I1(XLXN_17), 
                .O(XLXN_29));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_17), 
                .O(XLXN_30));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_23), 
                .O(XLXN_31));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_32));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_29), 
                .O(XLXN_1));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_30), 
                .O(XLXN_2));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_31), 
                .O(XLXN_3));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_32), 
                 .O(XLXN_4));
   OR4  XLXI_19 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .I2(XLXN_2), 
                .I3(XLXN_1), 
                .O(o[0]));
   AND2  XLXI_20 (.I0(I0[1]), 
                 .I1(XLXN_29), 
                 .O(XLXN_5));
   AND2  XLXI_21 (.I0(I1[1]), 
                 .I1(XLXN_30), 
                 .O(XLXN_6));
   AND2  XLXI_22 (.I0(I2[1]), 
                 .I1(XLXN_31), 
                 .O(XLXN_7));
   AND2  XLXI_23 (.I0(I3[1]), 
                 .I1(XLXN_32), 
                 .O(XLXN_8));
   OR4  XLXI_24 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .I2(XLXN_6), 
                .I3(XLXN_5), 
                .O(o[1]));
   AND2  XLXI_25 (.I0(I0[2]), 
                 .I1(XLXN_29), 
                 .O(XLXN_9));
   AND2  XLXI_26 (.I0(I1[2]), 
                 .I1(XLXN_30), 
                 .O(XLXN_10));
   AND2  XLXI_27 (.I0(I2[2]), 
                 .I1(XLXN_31), 
                 .O(XLXN_11));
   AND2  XLXI_28 (.I0(I3[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_12));
   OR4  XLXI_29 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .I2(XLXN_10), 
                .I3(XLXN_9), 
                .O(o[2]));
   AND2  XLXI_30 (.I0(I0[3]), 
                 .I1(XLXN_29), 
                 .O(XLXN_13));
   AND2  XLXI_31 (.I0(I1[3]), 
                 .I1(XLXN_30), 
                 .O(XLXN_14));
   AND2  XLXI_32 (.I0(I2[3]), 
                 .I1(XLXN_31), 
                 .O(XLXN_15));
   AND2  XLXI_33 (.I0(I3[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_16));
   OR4  XLXI_34 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .I2(XLXN_14), 
                .I3(XLXN_13), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_ALU(I0, 
                          I1, 
                          I2, 
                          I3, 
                          I4, 
                          I5, 
                          I6, 
                          I7, 
                          s, 
                          o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_135;
   
   OR2  XLXI_1 (.I0(XLXN_2), 
               .I1(XLXN_1), 
               .O(o[0]));
   AND2  XLXI_2 (.I0(o0[0]), 
                .I1(XLXN_135), 
                .O(XLXN_1));
   AND2  XLXI_3 (.I0(o1[0]), 
                .I1(s[2]), 
                .O(XLXN_2));
   OR2  XLXI_4 (.I0(XLXN_7), 
               .I1(XLXN_6), 
               .O(o[1]));
   AND2  XLXI_5 (.I0(o0[1]), 
                .I1(XLXN_135), 
                .O(XLXN_6));
   AND2  XLXI_6 (.I0(o1[1]), 
                .I1(s[2]), 
                .O(XLXN_7));
   OR2  XLXI_7 (.I0(XLXN_9), 
               .I1(XLXN_8), 
               .O(o[2]));
   AND2  XLXI_8 (.I0(o0[2]), 
                .I1(XLXN_135), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(o1[2]), 
                .I1(s[2]), 
                .O(XLXN_9));
   OR2  XLXI_10 (.I0(XLXN_11), 
                .I1(XLXN_10), 
                .O(o[3]));
   AND2  XLXI_11 (.I0(o0[3]), 
                 .I1(XLXN_135), 
                 .O(XLXN_10));
   AND2  XLXI_12 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_11));
   OR2  XLXI_13 (.I0(XLXN_13), 
                .I1(XLXN_12), 
                .O(o[4]));
   AND2  XLXI_14 (.I0(o2[0]), 
                 .I1(XLXN_135), 
                 .O(XLXN_12));
   AND2  XLXI_15 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_13));
   OR2  XLXI_16 (.I0(XLXN_15), 
                .I1(XLXN_14), 
                .O(o[5]));
   AND2  XLXI_17 (.I0(o2[1]), 
                 .I1(XLXN_135), 
                 .O(XLXN_14));
   AND2  XLXI_18 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_15));
   OR2  XLXI_19 (.I0(XLXN_17), 
                .I1(XLXN_16), 
                .O(o[6]));
   AND2  XLXI_20 (.I0(o2[2]), 
                 .I1(XLXN_135), 
                 .O(XLXN_16));
   AND2  XLXI_21 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_17));
   OR2  XLXI_22 (.I0(XLXN_19), 
                .I1(XLXN_18), 
                .O(o[7]));
   AND2  XLXI_23 (.I0(o2[3]), 
                 .I1(XLXN_135), 
                 .O(XLXN_18));
   AND2  XLXI_24 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_19));
   MUX4T1_MUSER_ALU  XLXI_28 (.I0(I0[3:0]), 
                             .I1(I1[3:0]), 
                             .I2(I2[3:0]), 
                             .I3(I3[3:0]), 
                             .s(s[1:0]), 
                             .o(o0[3:0]));
   MUX4T1_MUSER_ALU  XLXI_37 (.I0(I4[3:0]), 
                             .I1(I5[3:0]), 
                             .I2(I6[3:0]), 
                             .I3(I7[3:0]), 
                             .s(s[1:0]), 
                             .o(o1[3:0]));
   MUX4T1_MUSER_ALU  XLXI_38 (.I0(I0[7:4]), 
                             .I1(I1[7:4]), 
                             .I2(I2[7:4]), 
                             .I3(I3[7:4]), 
                             .s(s[1:0]), 
                             .o(o2[3:0]));
   MUX4T1_MUSER_ALU  XLXI_39 (.I0(I4[7:4]), 
                             .I1(I5[7:4]), 
                             .I2(I6[7:4]), 
                             .I3(I7[7:4]), 
                             .s(s[1:0]), 
                             .o(o3[3:0]));
   INV  XLXI_41 (.I(s[2]), 
                .O(XLXN_135));
endmodule
`timescale 1ns / 1ps

module MUX8T1_32_MUSER_ALU(I0, 
                           I1, 
                           I2, 
                           I3, 
                           I4, 
                           I5, 
                           I6, 
                           I7, 
                           s, 
                           o);

    input [31:0] I0;
    input [31:0] I1;
    input [31:0] I2;
    input [31:0] I3;
    input [31:0] I4;
    input [31:0] I5;
    input [31:0] I6;
    input [31:0] I7;
    input [2:0] s;
   output [31:0] o;
   
   
   MUX8T1_8_MUSER_ALU  XLXI_1 (.I0(I0[7:0]), 
                              .I1(I1[7:0]), 
                              .I2(I2[7:0]), 
                              .I3(I3[7:0]), 
                              .I4(I4[7:0]), 
                              .I5(I5[7:0]), 
                              .I6(I6[7:0]), 
                              .I7(I7[7:0]), 
                              .s(s[2:0]), 
                              .o(o[7:0]));
   MUX8T1_8_MUSER_ALU  XLXI_6 (.I0(I0[15:8]), 
                              .I1(I1[15:8]), 
                              .I2(I2[15:8]), 
                              .I3(I3[15:8]), 
                              .I4(I4[15:8]), 
                              .I5(I5[15:8]), 
                              .I6(I6[15:8]), 
                              .I7(I7[15:8]), 
                              .s(s[2:0]), 
                              .o(o[15:8]));
   MUX8T1_8_MUSER_ALU  XLXI_7 (.I0(I0[23:16]), 
                              .I1(I1[23:16]), 
                              .I2(I2[23:16]), 
                              .I3(I3[23:16]), 
                              .I4(I4[23:16]), 
                              .I5(I5[23:16]), 
                              .I6(I6[23:16]), 
                              .I7(I7[23:16]), 
                              .s(s[2:0]), 
                              .o(o[23:16]));
   MUX8T1_8_MUSER_ALU  XLXI_8 (.I0(I0[31:24]), 
                              .I1(I1[31:24]), 
                              .I2(I2[31:24]), 
                              .I3(I3[31:24]), 
                              .I4(I4[31:24]), 
                              .I5(I5[31:24]), 
                              .I6(I6[31:24]), 
                              .I7(I7[31:24]), 
                              .s(s[2:0]), 
                              .o(o[31:24]));
endmodule
`timescale 1ns / 1ps

module ALU(A, 
           ALU_operation, 
           B, 
           overflow, 
           res, 
           zero);

    input [31:0] A;
    input [2:0] ALU_operation;
    input [31:0] B;
   output overflow;
   output [31:0] res;
   output zero;
   
   wire N0;
   wire [32:0] S;
   wire [31:0] XLXN_11;
   wire [31:0] XLXN_14;
   wire [31:0] XLXN_18;
   wire [31:0] XLXN_23;
   wire [31:0] XLXN_35;
   wire [31:0] XLXN_66;
   wire [31:0] XLXN_67;
   wire [31:0] res_DUMMY;
   
   assign res[31:0] = res_DUMMY[31:0];
   ADC32  ADC (.A(A[31:0]), 
              .B(XLXN_23[31:0]), 
              .C0(ALU_operation[2]), 
              .S(S[32:0]));
   MUX8T1_32_MUSER_ALU  XLXI_2 (.I0(XLXN_14[31:0]), 
                               .I1(XLXN_11[31:0]), 
                               .I2(S[31:0]), 
                               .I3(XLXN_66[31:0]), 
                               .I4(XLXN_67[31:0]), 
                               .I5(XLXN_18[31:0]), 
                               .I6(S[31:0]), 
                               .I7({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, S[32]}), 
                               .s(ALU_operation[2:0]), 
                               .o(res_DUMMY[31:0]));
   and32  XLXI_3 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_14[31:0]));
   xor32  XLXI_5 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_66[31:0]));
   nor32  XLXI_6 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_67[31:0]));
   srl32  XLXI_7 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_18[31:0]));
   xor32  XLXI_9 (.A(XLXN_35[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_23[31:0]));
   or_bit_32  XLXI_10 (.A(res_DUMMY[31:0]), 
                      .o(zero));
   SignalExt_32  XLXI_11 (.S(ALU_operation[2]), 
                         .So(XLXN_35[31:0]));
   or32  XLXI_22 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_11[31:0]));
   GND  XLXI_23 (.G(N0));
endmodule
