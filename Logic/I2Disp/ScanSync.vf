////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ScanSync.vf
// /___/   /\     Timestamp : 11/15/2016 17:21:28
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog F:/3150101155/I2Disp/ScanSync.vf -w F:/3150101155/I2Disp/ScanSync.sch
//Design Name: ScanSync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_MUSER_ScanSync(I0, 
                             I1, 
                             I2, 
                             I3, 
                             s, 
                             o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_23;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_17));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_23));
   AND2  XLXI_3 (.I0(XLXN_23), 
                .I1(XLXN_17), 
                .O(XLXN_29));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_17), 
                .O(XLXN_30));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_23), 
                .O(XLXN_31));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_32));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_29), 
                .O(XLXN_1));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_30), 
                .O(XLXN_2));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_31), 
                .O(XLXN_3));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_32), 
                 .O(XLXN_4));
   OR4  XLXI_19 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .I2(XLXN_2), 
                .I3(XLXN_1), 
                .O(o[0]));
   AND2  XLXI_20 (.I0(I0[1]), 
                 .I1(XLXN_29), 
                 .O(XLXN_5));
   AND2  XLXI_21 (.I0(I1[1]), 
                 .I1(XLXN_30), 
                 .O(XLXN_6));
   AND2  XLXI_22 (.I0(I2[1]), 
                 .I1(XLXN_31), 
                 .O(XLXN_7));
   AND2  XLXI_23 (.I0(I3[1]), 
                 .I1(XLXN_32), 
                 .O(XLXN_8));
   OR4  XLXI_24 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .I2(XLXN_6), 
                .I3(XLXN_5), 
                .O(o[1]));
   AND2  XLXI_25 (.I0(I0[2]), 
                 .I1(XLXN_29), 
                 .O(XLXN_9));
   AND2  XLXI_26 (.I0(I1[2]), 
                 .I1(XLXN_30), 
                 .O(XLXN_10));
   AND2  XLXI_27 (.I0(I2[2]), 
                 .I1(XLXN_31), 
                 .O(XLXN_11));
   AND2  XLXI_28 (.I0(I3[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_12));
   OR4  XLXI_29 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .I2(XLXN_10), 
                .I3(XLXN_9), 
                .O(o[2]));
   AND2  XLXI_30 (.I0(I0[3]), 
                 .I1(XLXN_29), 
                 .O(XLXN_13));
   AND2  XLXI_31 (.I0(I1[3]), 
                 .I1(XLXN_30), 
                 .O(XLXN_14));
   AND2  XLXI_32 (.I0(I2[3]), 
                 .I1(XLXN_31), 
                 .O(XLXN_15));
   AND2  XLXI_33 (.I0(I3[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_16));
   OR4  XLXI_34 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .I2(XLXN_14), 
                .I3(XLXN_13), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module ScanSync(Hexs, 
                LES, 
                point, 
                Scan, 
                AN, 
                Hex, 
                LE, 
                p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] Hex;
   output LE;
   output p;
   
   wire G0;
   wire [3:0] o;
   wire V5;
   
   BUF  XLXI_4 (.I(o[3]), 
               .O(LE));
   BUF  XLXI_5 (.I(o[2]), 
               .O(p));
   VCC  XLXI_6 (.P(V5));
   GND  XLXI_7 (.G(G0));
   MUX4T1_MUSER_ScanSync  XLXI_8 (.I0(Hexs[3:0]), 
                                 .I1(Hexs[7:4]), 
                                 .I2(Hexs[11:8]), 
                                 .I3(Hexs[15:12]), 
                                 .s(Scan[1:0]), 
                                 .o(Hex[3:0]));
   MUX4T1_MUSER_ScanSync  XLXI_9 (.I0({LES[0], point[0], G0, G0}), 
                                 .I1({LES[1], point[1], G0, G0}), 
                                 .I2({LES[2], point[2], G0, G0}), 
                                 .I3({LES[3], point[3], G0, G0}), 
                                 .s(Scan[1:0]), 
                                 .o(o[3:0]));
   MUX4T1_MUSER_ScanSync  XLXI_10 (.I0({V5, V5, V5, G0}), 
                                  .I1({V5, V5, G0, V5}), 
                                  .I2({V5, G0, V5, V5}), 
                                  .I3({G0, V5, V5, V5}), 
                                  .s(Scan[1:0]), 
                                  .o(AN[3:0]));
endmodule
