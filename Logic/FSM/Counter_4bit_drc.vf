////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter_4bit_drc.vf
// /___/   /\     Timestamp : 12/05/2016 23:02:05
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog Counter_4bit_drc.vf -w C:/Users/liu/Documents/ISE/Exp10/FSM/Counter_4bit.sch
//Design Name: Counter_4bit
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module RS_NAND_MUSER_Counter_4bit(Rn, 
                                  Sn, 
                                  Q, 
                                  Qn);

    input Rn;
    input Sn;
   output Q;
   output Qn;
   
   wire Q_DUMMY;
   wire Qn_DUMMY;
   
   assign Q = Q_DUMMY;
   assign Qn = Qn_DUMMY;
   NAND2  XLXI_1 (.I0(Qn_DUMMY), 
                 .I1(Sn), 
                 .O(Q_DUMMY));
   NAND2  XLXI_2 (.I0(Rn), 
                 .I1(Q_DUMMY), 
                 .O(Qn_DUMMY));
endmodule
`timescale 1ns / 1ps

module RS_EN_MUSER_Counter_4bit(C, 
                                R, 
                                S, 
                                Q, 
                                Qn);

    input C;
    input R;
    input S;
   output Q;
   output Qn;
   
   wire XLXN_1;
   wire XLXN_2;
   
   RS_NAND_MUSER_Counter_4bit  RS_1 (.Rn(XLXN_2), 
                                    .Sn(XLXN_1), 
                                    .Q(Q), 
                                    .Qn(Qn));
   NAND2  XLXI_2 (.I0(C), 
                 .I1(S), 
                 .O(XLXN_1));
   NAND2  XLXI_3 (.I0(R), 
                 .I1(C), 
                 .O(XLXN_2));
endmodule
`timescale 1ns / 1ps

module FD_MUSER_Counter_4bit(C, 
                             D, 
                             Q, 
                             Qn);

    input C;
    input D;
   output Q;
   output Qn;
   
   wire XLXN_3;
   
   RS_EN_MUSER_Counter_4bit  RS2 (.C(C), 
                                 .R(XLXN_3), 
                                 .S(D), 
                                 .Q(Q), 
                                 .Qn(Qn));
   INV  XLXI_2 (.I(D), 
               .O(XLXN_3));
endmodule
`timescale 1ns / 1ps

module Counter_4bit(clk, 
                    Qa, 
                    Qb, 
                    Qc, 
                    Qd, 
                    Rc);

    input clk;
   output Qa;
   output Qb;
   output Qc;
   output Qd;
   output Rc;
   
   wire nQa;
   wire nQb;
   wire nQc;
   wire nQd;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_20;
   wire XLXN_24;
   wire Qa_DUMMY;
   wire Qb_DUMMY;
   wire Qc_DUMMY;
   wire Qd_DUMMY;
   
   assign Qa = Qa_DUMMY;
   assign Qb = Qb_DUMMY;
   assign Qc = Qc_DUMMY;
   assign Qd = Qd_DUMMY;
   FD_MUSER_Counter_4bit  A (.C(clk), 
                            .D(nQa), 
                            .Q(Qa_DUMMY));
   FD_MUSER_Counter_4bit  B (.C(clk), 
                            .D(XLXN_9), 
                            .Q(Qb_DUMMY));
   FD_MUSER_Counter_4bit  C (.C(clk), 
                            .D(XLXN_10), 
                            .Q(Qc_DUMMY));
   FD_MUSER_Counter_4bit  D (.C(clk), 
                            .D(XLXN_11), 
                            .Q(Qd_DUMMY));
   XNOR2  XLXI_5 (.I0(nQb), 
                 .I1(Qa_DUMMY), 
                 .O(XLXN_9));
   XNOR2  XLXI_6 (.I0(nQc), 
                 .I1(XLXN_24), 
                 .O(XLXN_10));
   XNOR2  XLXI_7 (.I0(nQd), 
                 .I1(XLXN_20), 
                 .O(XLXN_11));
   INV  XLXI_8 (.I(Qb_DUMMY), 
               .O(nQb));
   INV  XLXI_9 (.I(Qc_DUMMY), 
               .O(nQc));
   INV  XLXI_10 (.I(Qd_DUMMY), 
                .O(nQd));
   NOR4  XLXI_11 (.I0(nQa), 
                 .I1(nQb), 
                 .I2(nQc), 
                 .I3(nQd), 
                 .O(Rc));
   NOR3  XLXI_12 (.I0(nQa), 
                 .I1(nQb), 
                 .I2(nQc), 
                 .O(XLXN_20));
   NOR2  XLXI_13 (.I0(nQa), 
                 .I1(nQb), 
                 .O(XLXN_24));
   INV  XLXI_14 (.I(Qa_DUMMY), 
                .O(nQa));
endmodule
